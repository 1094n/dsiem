filter {
  if [application] == "suricata" {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "timestamp"
    }
    ruby {
      code => "
      if event.get('[event_type]') == 'fileinfo'
         event.set('[fileinfo][type]', event.get('[fileinfo][magic]').to_s.split(',')[0])
      end
      "
    }

    # remove useless field
    mutate {
      remove_field => [ "beat.hostname" ]
    }

  
    # check if its internal IP address 
    if [src_ip] {
      cidr {
        add_tag => [ "src_internal_ip" ]
        address => [ "%{src_ip}" ]
        network => [ "10.0.0.0/8", "127.0.0.1", "192.168.0.0/16", "172.16.0.0/12" ]
      }
    }
    if [dest_ip] {
      cidr {
        add_tag => [ "dst_internal_ip" ]
        address => [ "%{dest_ip}" ]
        network => [ "10.0.0.0/8", "127.0.0.1", "192.168.0.0/16", "172.16.0.0/12" ]
      }
    }

    if "src_internal_ip" not in [tags] {
      geoip {
        source => "src_ip"
        target => "src_geoip"
        database => "/etc/logstash/GeoLite2-City.mmdb"
        add_field => [ "[src_geoip][coordinates]", "%{[src_geoip][longitude]}" ]
        add_field => [ "[src_geoip][coordinates]", "%{[src_geoip][latitude]}"  ]
      }
      mutate {
        convert => [ "[src_geoip][coordinates]", "float_eu" ]
      }
      mutate {
        remove_field => [ "[src_geoip][longitude]", "[src_geoip][latitude]" ]
      }
    }
    if "dst_internal_ip" not in [tags] {
      geoip {
        source => "dest_ip"
        target => "dest_geoip"
        database => "/etc/logstash/GeoLite2-City.mmdb"
        add_field => [ "[dest_geoip][coordinates]", "%{[dest_geoip][longitude]}" ]
        add_field => [ "[dest_geoip][coordinates]", "%{[dest_geoip][latitude]}"  ]
      }
      mutate {
        convert => [ "[dest_geoip][coordinates]", "float_eu" ]
      }
      mutate {
        remove_field => [ "[dest_geoip][longitude]", "[dest_geoip][latitude]" ]
      }
    }
  }
}

