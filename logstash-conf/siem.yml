#########################################
# From log sources                      #
#########################################

input {
 file {
  path => "/home/mmta/go/src/siem/testings/test.log"
  start_position => "beginning"
  sincedb_path=> "/home/mmta/go/src/siem/testings/since_db.log.txt.1"
  ignore_older => 0
  codec => "json"
  add_field => { "[@metadata][siem_data_type]" => "normalizedEvent" }
 }
}

filter {
  if [@metadata][siem_data_type] == "normalizedEvent" {
    uuid {
      target    => "event_id"
      overwrite => true
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    mutate {
      remove_field => [ "timestamp", "host" ]
    }
  }
}

output{
  if [@metadata][siem_data_type] == "normalizedEvent" {
    # to siem
    http {
      format=>"json"
      http_method=>"post"
      url=>"http://localhost:8080"
    }
    # to elasticsearch
    elasticsearch {
      hosts => "elasticsearch.appl184.mss.defenxor.com:9200"
      index => "siem_events-%{+YYYY.MM.dd}"
      document_id => "%{[event_id]}"
      action => "index"
      template => "/home/mmta/go/src/siem/logstash-conf/siem_events-template.json"
      template_name => "siem_events"
      template_overwrite => true
    }
  }
}

#########################################
# From SIEM                             #
#########################################

input {
 file {
  path => "/home/mmta/go/src/siem/logs/siem_backlogs.json"
  start_position => "beginning"
  sincedb_path=> "/home/mmta/go/src/siem/testings/since_db.backlogs.txt"
  ignore_older => 0
  codec => "json"
  add_field => { "[@metadata][siem_data_type]" => "backlogs" }
 }
 file {
  path => "/home/mmta/go/src/siem/logs/siem_alarms.json"
  start_position => "beginning"
  sincedb_path=> "/home/mmta/go/src/siem/testings/since_db.alarms.txt"
  ignore_older => 0
  codec => "json"
  add_field => { "[@metadata][siem_data_type]" => "alarms" }
 }
}

filter {
  if [@metadata][siem_data_type] == "backlogs" {
    date {
      match => [ "status_time", "UNIX" ]
    }
    mutate {
      add_field => { "[@metadata][backlog_id]" => "%{[backlog_id]}" }
      remove_field => [ "status_time", "backlog_id", "src_ips", "dst_ips", "host", "path" ]
			rename => { "[directive][rules]" => "rules" }
    }
  }
  if [@metadata][siem_data_type] == "alarms" {
    date {
      match => [ "created_time", "UNIX" ]
    }
    mutate {
      add_field => { "[@metadata][alarm_id]" => "%{[alarm_id]}" }
      remove_field => [ "created_time", "alarm_id", "host", "path" ]
    }
  }
}

output{
  if [@metadata][siem_data_type] == "backlogs" {
    elasticsearch {
      hosts => "elasticsearch.appl184.mss.defenxor.com:9200"
      index => "siem_backlogs"
      document_id => "%{[@metadata][backlog_id]}"
      template => "/home/mmta/go/src/siem/logstash-conf/siem_backlogs-template.json"
      template_name => "siem_backlogs"
      template_overwrite => true
    }
  }
  if [@metadata][siem_data_type] == "alarms" {
    elasticsearch {
      hosts => "elasticsearch.appl184.mss.defenxor.com:9200"
      index => "siem_alarms"
      document_id => "%{[@metadata][alarm_id]}"
      template => "/home/mmta/go/src/siem/logstash-conf/siem_alarms-template.json"
      template_name => "siem_alarms"
      template_overwrite => true
    }
  }
}
