// Code generated by GoJay. DO NOT EDIT.

package siem 

import "github.com/francoispqt/gojay"

// UnmarshalJSONObject implements gojay's UnmarshalerJSONObject
func (v *siemAlarmEvents) UnmarshalJSONObject(dec *gojay.Decoder, k string) error {
	switch k {
	case "iD":
		return dec.String(&v.ID)
	case "stage":
		return dec.Int(&v.Stage)
	case "event":
		return dec.String(&v.Event)
	}
	return nil
}

// NKeys returns the number of keys to unmarshal
func (v *siemAlarmEvents) NKeys() int { return 3 }

// MarshalJSONObject implements gojay's MarshalerJSONObject
func (v *siemAlarmEvents) MarshalJSONObject(enc *gojay.Encoder) {
	enc.StringKey("iD", v.ID)
	enc.IntKey("stage", v.Stage)
	enc.StringKey("event", v.Event)
}

// IsNil returns wether the structure is nil value or not
func (v *siemAlarmEvents) IsNil() bool { return v == nil }
