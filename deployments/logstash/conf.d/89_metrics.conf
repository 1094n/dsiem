
# this should applies only to events from filebeat
filter {
 if "beats" in [tags] {
   metrics {
     meter => "events"
     add_tag => [ "logstash-eps", "epscounter" ]
     add_field => { "eps" => "%{[events][rate_1m]}" }
     add_field => { "data_source" => "logstash" }
   }
 }
}

# this for syslog l337 socat hack
input {
 tcp {
  host => "syslog-a-0.syslog-a"
  port => 31337
  mode => "client"
  tags => ["syslog-eps", "epscounter"]
 }
}

# for SIEM
input {
  jdbc {
    jdbc_driver_library => "/mysqljdbc/mysql-connector-java-5.1.46.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://galera-binlog-server:3306/alienvault"
    jdbc_user => "${MYSQL_USER}"
    jdbc_password => "${MYSQL_PASSWORD}"
    schedule => "* * * * *"
    statement => "SELECT sum(stat) as eps from acl_entities_stats"
    tags => [ "siem-eps", "epscounter" ]
    add_field => { "data_source" => "siem" }
    add_field => { "host" => "siem" }
  }
}

filter {
 if "syslog-eps" in [tags] {
  dissect {
   mapping => {
    "message" => "%{eps} %{label}"
   }
   add_field => { "data_source" => "syslog" }
  }
  prune {
    whitelist_names => [ "^tags$","eps","@timestamp","data_source","host" ]
  }
 }
}

filter {
 if "logstash-eps" in [tags] {
  mutate {
   rename => { "message" => "host" }
  }
  prune {
   whitelist_names => [ "^tags$","eps","@timestamp","data_source","host" ]
  }
 }
}

filter {
 if "siem-eps" in [tags ] {
  prune {
   whitelist_names => [ "^tags$","eps","@timestamp","data_source","host" ]
  }
 }
}

# this is for logstash itself, printing to stdout
output {
 if "logstash-eps" in [tags] {
  stdout {
   codec => line {
    format => "%{eps} EPS"
   }
  }
 }
}

# for appliance dashboard, provide web socket
output {
 if "epscounter" in [tags] {
  websocket {
   port => 7000
  }
 }
}

 
